def deutsch[n: !ℕ](func: 
const 𝔹^n!→ qfree 𝔹): !𝔹 {
    cand := vector(n, false): 𝔹^n;
    
    for i in [0..n) {
        cand[i] := H(cand[i]);
    }
    if func(cand) {
        phase(π);
    }
    
    for i in [0..n) {
        cand[i] := H(cand[i]);
    }
    res := measure(cand): !𝔹^n;
    
    for i in [0..n) {
        if res[i] {
            
            return false;
        }
        
    }
    
    return true;
}
